/* --------------------------------------------------------------------------------
 #
 #	4DPlugin-Event-Kit.h
 #	source generated by 4D Plugin Wizard
 #	Project : Event Kit
 #	author : miyako
 #	2019/10/14
 #  
 # --------------------------------------------------------------------------------*/

#ifndef PLUGIN_EVENT_KIT_H
#define PLUGIN_EVENT_KIT_H

#include "4DPluginAPI.h"

#import <Cocoa/Cocoa.h>
#import <EventKit/EventKit.h>
#import <Security/Security.h>

#include "4DPlugin-JSON.h"

#include "C_LONGINT.h"
#include "C_TEXT.h"
#include "C_REAL.h"
#include "C_DATE.h"
#include "C_TIME.h"
#include "ARRAY_TEXT.h"

typedef enum {
    
    request_permission_unknown = 0,
    request_permission_authorized = 1,
    request_permission_not_determined = 2,
    request_permission_denied = 3,
    request_permission_restricted = 4
    
}request_permission_t;

#pragma mark -

void EK_STORE_Commit(PA_PluginParameters params);
void EK_SOURCE_Get_type(PA_PluginParameters params);
void EK_SOURCE_Get_title(PA_PluginParameters params);
void EK_SOURCE_LIST(PA_PluginParameters params);
void EK_SOURCE_Calendar_list(PA_PluginParameters params);
void EK_CALENDAR_Get_rgb_color(PA_PluginParameters params);
void EK_CALENDAR_Set_rgb_color(PA_PluginParameters params);
void EK_CALENDAR_Remove(PA_PluginParameters params);
void EK_CALENDAR_Save(PA_PluginParameters params);
void EK_CALENDAR_Get_default(PA_PluginParameters params);
void EK_CALENDAR_Get_type(PA_PluginParameters params);
void EK_CALENDAR_LIST(PA_PluginParameters params);
void EK_CALENDAR_Create(PA_PluginParameters params);
void EK_CALENDAR_Get_title(PA_PluginParameters params);
void EK_CALENDAR_Set_title(PA_PluginParameters params);
void EK_CALENDAR_Get_source(PA_PluginParameters params);
void EK_OBJECT_ROLLBACK(PA_PluginParameters params);
void EK_OBJECT_RESET(PA_PluginParameters params);
void EK_OBJECT_REFRESH(PA_PluginParameters params);
void EK_OBJECT_Has_changes(PA_PluginParameters params);
void EK_OBJECT_Is_new(PA_PluginParameters params);
void EK_ITEM_Get_attendees(PA_PluginParameters params);
void EK_ITEM_Get_calendar(PA_PluginParameters params);
void EK_ITEM_Get_title(PA_PluginParameters params);
void EK_ITEM_Set_title(PA_PluginParameters params);
void EK_ITEM_Get_location(PA_PluginParameters params);
void EK_ITEM_Set_location(PA_PluginParameters params);
void EK_ITEM_Get_url(PA_PluginParameters params);
void EK_ITEM_Set_url(PA_PluginParameters params);
void EK_ITEM_Get_notes(PA_PluginParameters params);
void EK_ITEM_Set_notes(PA_PluginParameters params);
void EK_ITEM_Get_alarms(PA_PluginParameters params);
void EK_ITEM_Set_alarms(PA_PluginParameters params);
void EK_ITEM_Get_rules(PA_PluginParameters params);
void EK_ITEM_Set_rules(PA_PluginParameters params);
void EK_ITEM_Get_timezone(PA_PluginParameters params);
void EK_ITEM_Set_timezone(PA_PluginParameters params);
void EK_ITEM_Set_calendar(PA_PluginParameters params);
void EK_ITEM_Get_attendee_names(PA_PluginParameters params);
void EK_ITEM_Get_modification_date(PA_PluginParameters params);
void EK_REMINDER_Create(PA_PluginParameters params);
void EK_REMINDER_Set_start_date(PA_PluginParameters params);
void EK_REMINDER_Get_start_date(PA_PluginParameters params);
void EK_REMINDER_Set_due_date(PA_PluginParameters params);
void EK_REMINDER_Get_due_date(PA_PluginParameters params);
void EK_REMINDER_Set_completed_date(PA_PluginParameters params);
void EK_REMINDER_Get_completed_date(PA_PluginParameters params);
void EK_REMINDER_Remove(PA_PluginParameters params);
void EK_REMINDER_Save(PA_PluginParameters params);
void EK_EVENT_Create(PA_PluginParameters params);
void EK_EVENT_Set_start_date(PA_PluginParameters params);
void EK_EVENT_Get_start_date(PA_PluginParameters params);
void EK_EVENT_Set_end_date(PA_PluginParameters params);
void EK_EVENT_Get_end_date(PA_PluginParameters params);
void EK_EVENT_Get_occurrence_date(PA_PluginParameters params);
void EK_EVENT_Get_status(PA_PluginParameters params);
void EK_EVENT_Get_all_day(PA_PluginParameters params);
void EK_EVENT_Set_all_day(PA_PluginParameters params);
void EK_EVENT_Get_organizer_name(PA_PluginParameters params);
void EK_EVENT_Save(PA_PluginParameters params);
void EK_EVENT_Remove(PA_PluginParameters params);
void EK_QUERY_EVENT(PA_PluginParameters params);
void EK_QUERY_COMPLETE_REMINDER(PA_PluginParameters params);
void EK_QUERY_INCOMPLETE_REMINDER(PA_PluginParameters params);

void EK_Request_permisson(PA_PluginParameters params);

#endif /* PLUGIN_EVENT_KIT_H */
